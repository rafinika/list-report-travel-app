managed;// implementation in class zbp_yr_i_rap_travel unique;
//strict ( 2 );

define behavior for ZYR_I_RAP_Travel alias Travel
persistent table zyr_travel
lock master
//authorization master ( instance )
etag master LocalLastChangedAt
{
  create;
  update;
  delete;
  field ( numbering : managed, readonly ) TravelUUID;
  mapping for zyr_travel
    {
      TravelUUID         = travel_uuid;
      TravelID           = travel_id;
      AgencyID           = agency_id;
      CustomerID         = customer_id;
      BeginDate          = begin_date;
      EndDate            = end_date;
      BookingFee         = booking_fee;
      TotalPrice         = total_price;
      CurrencyCode       = currency_code;
      Description        = description;
      TravelStatus       = overall_status;
      CreatedBy          = created_by;
      CreatedAt          = created_at;
      LastChangedBy      = last_changed_by;
      LastChangedAt      = last_changed_at;
      LocalLastChangedAt = local_last_changed_at;
    }
    association _Booking {create; }

}

define behavior for ZYR_I_RAP_Booking alias Booking
persistent table zyr_book
lock dependent by _Travel
//authorization dependent by _Travel
etag master LocalLastChangedAt
{
  update;
  delete;
  field ( numbering : managed, readonly) BookingUUID;
  field ( readonly ) TravelUUID;
  association _Travel;

  mapping for zyr_book
  {
    BookingUUID        = booking_uuid;
    TravelUUID         = travel_uuid;
    BookingID          = booking_id;
    BookingDate        = booking_date;
    CustomerID         = customer_id;
    CarrierID          = carrier_id;
    ConnectionID       = connection_id;
    FlightDate         = flight_date;
    FlightPrice        = flight_price;
    CurrencyCode       = currency_code;
    CreatedBy          = created_by;
    LastChangedBy      = last_changed_by;
    LocalLastChangedAt = local_last_changed_at;
  }
}